{"version":3,"sources":["../../src/providers/pagination-provider.js","../../src/components/pbutton.js","../../src/services/styles.js","../../src/services/fetch-page.js","../../src/components/pagination.js","../../src/services/filter-props.js","../../src/index.js","App.js","index.js"],"names":["defaultData","current","defaultCurrent","defaultPage","defaultPageSize","disabled","hideOnSinglePage","itemRender","pageSize","pageNeighbours","pageSizeOptions","paginationProps","responsive","showQuickJumper","showSizeChanger","showTotal","simple","total","onChange","onShowSizeChange","size","rounded","baseStyles","activeStyles","hoverStyles","colorScheme","PaginationContext","React","PagButton","props","paginationStyles","activeStyle","bg","useColorModeValue","color","cursor","hoverStyle","_hover","baseStyle","userSelect","styles","px","fontSize","py","getSizeStyle","opacity","usePaginationStyles","display","type","active","show","handleResponsive","onClick","as","mx","my","_focus","boxShadow","base","sm","LEFT_PAGE","range","step","i","PaginationComp","totalPages","Math","prevRender","nextRender","leftRender","rightRender","jumperRender","pageRender","allRender","totalRender","pages","currentPage","totalNumbers","startPage","endPage","hasLeftSpill","hasRightSpill","spillOffset","extraPages","fetchPageNumbers","changePage","page","fastBackward","fastForward","simplePage","setSimplePage","pageJumper","setPageJumper","w","justifyContent","onSubmit","e","isNaN","textAlign","isDisabled","value","key","opt","oid","wordBreak","width","methods","nonMethods","Object","filterProps","validProps","acc","allProps","setCurrentPage","setPageSize","contextvalue","PagContext","Section","spacing","p","direction","alignItems","title","children","App","useColorMode","colorMode","toggleColorMode","mb","console","log","activePage","theme","extendTheme","colors","brand","50","100","200","300","400","500","600","700","800","900","config","initialColorMode","useSystemColorMode","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c836337d.chunk.js","sourcesContent":["import React from 'react'\n\nexport const defaultData = {\n  current: null, //*\n  defaultCurrent: 1, //*\n  defaultPage: 1, //*\n  defaultPageSize: 10, //*\n  disabled: false, //*\n  hideOnSinglePage: false, //*\n  itemRender: () => null, //*\n  pageSize: null, //*\n  pageNeighbours: 0, //* indicates the number of additional page numbers to show on each side of the current page.\n  pageSizeOptions: [10, 20, 50, 100], //*\n  paginationProps: null, //*\n  responsive: false, //*\n  showQuickJumper: false, //*\n  showSizeChanger: null, //*\n  showTotal: () => '', //*\n  simple: null, //*\n  total: 0, //*\n  onChange: () => '', //*\n  onShowSizeChange: () => '', //*\n  size: 'md', //*\n  rounded: 'md', //*\n  baseStyles: null, //*\n  activeStyles: null, //*\n  hoverStyles: null, //*\n  colorScheme: 'brand' //*\n}\nconst PaginationContext = React.createContext({\n  ...defaultData\n})\n\nexport default PaginationContext\n","import React from 'react'\n\nimport { Button } from '@chakra-ui/react'\nimport { usePaginationStyles } from '../services/styles'\nimport PagContext from '../providers/pagination-provider'\n\nconst handleResponsive = (props) => {\n  const { type, active, responsive } = props\n  let show = true\n  switch (type) {\n    case 'page':\n      if (!active) show = false\n      else if (!responsive.activePage) show = false\n      break\n\n    default:\n      break\n  }\n  return !show && 'none'\n}\nexport const PagButton = (props) => {\n  const { responsive } = React.useContext(PagContext)\n  const paginationStyles = usePaginationStyles(props)\n  const display = responsive && handleResponsive({ ...props, responsive })\n  return (\n    <Button\n      onClick={!props.disabled ? props.onClick : null}\n      as={props.as}\n      mx={1}\n      my='auto'\n      {...paginationStyles}\n      _focus={{ boxShadow: 'none' }}\n      size={props.size}\n      display={{ base: display, sm: 'block' }}\n    >\n      {props.children}\n    </Button>\n  )\n}\n","import React from 'react'\n\nimport { useColorModeValue } from '@chakra-ui/react'\nimport PagContext from '../providers/pagination-provider'\n\nexport const usePaginationStyles = (props) => {\n  const {\n    colorScheme,\n    rounded,\n    size,\n    baseStyles,\n    activeStyles,\n    hoverStyles\n  } = React.useContext(PagContext)\n\n  const activeStyle = activeStyles || {\n    bg: useColorModeValue(`${colorScheme}.600`, `${colorScheme}.500`),\n    color: useColorModeValue('white', 'gray.200'),\n    cursor: 'pointer'\n  }\n\n  const hoverStyle = !props.disabled && {\n    _hover: hoverStyles || activeStyle\n  }\n  const baseStyle = baseStyles || {\n    rounded: rounded,\n    bg: useColorModeValue('white', 'gray.800'),\n    color: useColorModeValue('gray.700', 'gray.200'),\n    userSelect: 'none'\n  }\n  const getSizeStyle = (size) => {\n    var styles\n    switch (size) {\n      case 'xs':\n        styles = { px: 2, fontSize: 'xs' }\n        break\n\n      case 'sm':\n        styles = { px: 3, py: 1, fontSize: 'sm' }\n        break\n\n      case 'md':\n        styles = { px: 4, py: 1, fontSize: 'md' }\n        break\n\n      case 'lg':\n        styles = { px: 5, py: 2, fontSize: 'lg' }\n        break\n\n      default:\n        break\n    }\n    return styles\n  }\n  const sizeStyle = getSizeStyle(size)\n  const disabledStyle = {\n    opacity: 0.6,\n    cursor: 'not-allowed'\n  }\n  return {\n    ...sizeStyle,\n    ...baseStyle,\n    ...hoverStyle,\n    ...(props.active && activeStyle),\n    ...(props.disabled && disabledStyle)\n  }\n}\n","import React from 'react'\nimport PagContext from '../providers/pagination-provider'\n\nconst LEFT_PAGE = 'LEFT'\n\nconst RIGHT_PAGE = 'RIGHT'\n\n/**\n * Helper method for creating a range of numbers\n * range(1, 5) => [1, 2, 3, 4, 5]\n */\nconst range = (from, to, step = 1) => {\n  let i = from\n  const range = []\n\n  while (i <= to) {\n    range.push(i)\n    i += step\n  }\n\n  return range\n}\n\nexport const fetchPageNumbers = () => {\n  const props = React.useContext(PagContext)\n  const totalPages = Math.ceil(props.total / props.pageSize)\n  const currentPage = props.currentPage\n  const pageNeighbours = props.pageNeighbours\n\n  /**\n   * totalNumbers: the total page numbers to show on the control\n   * totalBlocks: totalNumbers + 2 to cover for the left(<) and right(>) controls\n   */\n  const totalNumbers = pageNeighbours * 2 + 3\n  const totalBlocks = totalNumbers + 2\n\n  if (totalPages > totalBlocks) {\n    const startPage = Math.max(2, currentPage - pageNeighbours)\n    const endPage = Math.min(totalPages - 1, currentPage + pageNeighbours)\n    let pages = range(startPage, endPage)\n\n    /**\n     * hasLeftSpill: has hidden pages to the left\n     * hasRightSpill: has hidden pages to the right\n     * spillOffset: number of hidden pages either to the left or to the right\n     */\n    const hasLeftSpill = startPage > 2\n    const hasRightSpill = totalPages - endPage > 1\n    const spillOffset = totalNumbers - (pages.length + 1)\n\n    switch (true) {\n      // handle: (1) < {5 6} [7] {8 9} (10)\n      case hasLeftSpill && !hasRightSpill: {\n        const extraPages = range(startPage - spillOffset, startPage - 1)\n        pages = [LEFT_PAGE, ...extraPages, ...pages]\n        break\n      }\n\n      // handle: (1) {2 3} [4] {5 6} > (10)\n      case !hasLeftSpill && hasRightSpill: {\n        const extraPages = range(endPage + 1, endPage + spillOffset)\n        pages = [...pages, ...extraPages, RIGHT_PAGE]\n        break\n      }\n\n      // handle: (1) < {4 5} [6] {7 8} > (10)\n      case hasLeftSpill && hasRightSpill:\n      default: {\n        pages = [LEFT_PAGE, ...pages, RIGHT_PAGE]\n        break\n      }\n    }\n\n    return [1, ...pages, totalPages]\n  }\n\n  return range(1, totalPages)\n}\n","import React from 'react'\nimport { PagButton } from './pbutton'\nimport {\n  Menu,\n  MenuButton,\n  Button,\n  MenuList,\n  Box,\n  MenuOptionGroup,\n  MenuItemOption,\n  chakra,\n  Input,\n  HStack,\n  Text\n} from '@chakra-ui/react'\nimport PagContext from '../providers/pagination-provider'\nimport { fetchPageNumbers } from '../services/fetch-page'\n\nexport const PaginationComp = () => {\n  const props = React.useContext(PagContext)\n  const totalPages = Math.ceil(props.total / props.pageSize)\n\n  const prevRender = props.itemRender(props.currentPage, 'prev')\n  const nextRender = props.itemRender(props.currentPage, 'next')\n  const leftRender = props.itemRender(props.currentPage, 'backward')\n  const rightRender = props.itemRender(props.currentPage, 'forward')\n  const jumperRender = props.itemRender(props.currentPage, 'jumper')\n  const pageRender = props.itemRender(props.currentPage, 'page')\n  const allRender = props.itemRender(props.currentPage, 'all')\n  const totalRender = props.showTotal(props.total)\n\n  if (!totalPages || (props.hideOnSinglePage && totalPages === 1)) return null\n\n  const pages = fetchPageNumbers()\n\n  const changePage = (page) => {\n    const currentPage = Math.max(0, Math.min(page, totalPages))\n    props.setCurrentPage(currentPage)\n    props.onChange(currentPage, totalPages, props.pageSize, props.total)\n  }\n\n  const fastBackward = () => {\n    const page = props.currentPage - props.pageNeighbours * 2 - 1\n    changePage(page)\n  }\n\n  const fastForward = () => {\n    const page = props.currentPage + props.pageNeighbours * 2 + 1\n    changePage(page)\n  }\n\n  const backward = () => {\n    changePage(props.currentPage - 1)\n  }\n\n  const forward = () => {\n    changePage(props.currentPage + 1)\n  }\n\n  const changePageSize = (size) => {\n    props.setPageSize(size)\n    props.onShowSizeChange(props.currentPage, size)\n  }\n\n  const [simplePage, setSimplePage] = React.useState(props.currentPage)\n  const [pageJumper, setPageJumper] = React.useState('')\n\n  const simplePageUpdate = (e) => {\n    e.preventDefault()\n    if (isNaN(simplePage)) {\n      setSimplePage(props.currentPage)\n    } else {\n      props.setCurrentPage(Math.max(0, Math.min(simplePage, totalPages)))\n    }\n  }\n  const pageJumperUpdate = (e) => {\n    e.preventDefault()\n    if (isNaN(pageJumper)) {\n      setPageJumper('')\n    } else {\n      props.setCurrentPage(Math.max(0, Math.min(pageJumper, totalPages)))\n      setPageJumper('')\n    }\n  }\n  return (\n    props.total > 0 && (\n      <Box\n        {...(props.paginationProps || { w: 'full', justifyContent: 'center' })}\n      >\n        <chakra.span\n          mx={1}\n          my='auto'\n          fontSize={props.size}\n          display={\n            props.responsive && {\n              base: !props.responsive.totalRender && 'none',\n              sm: 'block'\n            }\n          }\n        >\n          {totalRender}\n        </chakra.span>\n        {props.simple ? (\n          <React.Fragment>\n            <form onSubmit={simplePageUpdate}>\n              <Input\n                textAlign='center'\n                isDisabled={props.disabled}\n                my='auto'\n                size={\n                  props.size === 'lg' ? 'md' : props.size === 'xs' ? 'xs' : 'sm'\n                }\n                w={props.size === 'lg' ? 50 : 10}\n                value={simplePage}\n                onChange={(e) => setSimplePage(e.target.value)}\n              />\n            </form>\n            <chakra.span\n              userSelect='none'\n              opacity={props.disabled ? 0.6 : 1}\n              mx={1}\n              my='auto'\n              fontSize={props.size}\n            >\n              / 5\n            </chakra.span>\n          </React.Fragment>\n        ) : (\n          <React.Fragment>\n            <PagButton\n              as={allRender || prevRender}\n              disabled={props.currentPage === 1 || props.disabled}\n              onClick={backward}\n              size={\n                props.size === 'lg' ? 'md' : props.size === 'xs' ? 'xs' : 'sm'\n              }\n            >\n              {!prevRender && '<'}\n            </PagButton>\n\n            {pages.map((page, index) => {\n              if (page === 'LEFT')\n                return (\n                  <Button\n                    as={allRender || rightRender}\n                    key={index}\n                    onClick={fastBackward}\n                    size={\n                      props.size === 'lg'\n                        ? 'md'\n                        : props.size === 'xs'\n                        ? 'xs'\n                        : 'sm'\n                    }\n                    display={\n                      props.responsive && {\n                        base: !props.responsive.fastBackward && 'none',\n                        sm: 'block'\n                      }\n                    }\n                    my='auto'\n                  >\n                    {!leftRender && '<<'}\n                  </Button>\n                )\n\n              if (page === 'RIGHT')\n                return (\n                  <Button\n                    as={allRender || rightRender}\n                    key={index}\n                    onClick={fastForward}\n                    size={\n                      props.size === 'lg'\n                        ? 'md'\n                        : props.size === 'xs'\n                        ? 'xs'\n                        : 'sm'\n                    }\n                    display={\n                      props.responsive && {\n                        base: !props.responsive.fastForward && 'none',\n                        sm: 'block'\n                      }\n                    }\n                    my='auto'\n                  >\n                    {!rightRender && '>>'}\n                  </Button>\n                )\n              const active = page === props.currentPage\n              return (\n                <PagButton\n                  as={allRender || pageRender}\n                  disabled={props.disabled}\n                  active={active}\n                  key={`page-${index}`}\n                  onClick={() => changePage(page)}\n                  size={\n                    props.size === 'lg'\n                      ? 'md'\n                      : props.size === 'xs'\n                      ? 'xs'\n                      : 'sm'\n                  }\n                  type='page'\n                >\n                  {page}\n                </PagButton>\n              )\n            })}\n            <PagButton\n              as={allRender || nextRender}\n              disabled={props.currentPage === totalPages || props.disabled}\n              onClick={forward}\n              size={\n                props.size === 'lg' ? 'md' : props.size === 'xs' ? 'xs' : 'sm'\n              }\n            >\n              {!nextRender && '>'}\n            </PagButton>\n          </React.Fragment>\n        )}\n        {props.showSizeChanger && (\n          <Menu>\n            <MenuButton\n              display={\n                props.responsive && {\n                  base: !props.responsive.pageSize && 'none',\n                  sm: 'block'\n                }\n              }\n            >\n              <PagButton\n                mx={1}\n                as={allRender || jumperRender || Button}\n                disabled={props.disabled}\n                size={\n                  props.size === 'lg' ? 'md' : props.size === 'xs' ? 'xs' : 'sm'\n                }\n              >\n                {props.pageSize} / page\n              </PagButton>\n            </MenuButton>\n            <MenuList>\n              <MenuOptionGroup onChange={changePageSize}>\n                {props.pageSizeOptions\n                  .filter((opt) => opt !== props.pageSize)\n                  .map((opt, oid) => (\n                    <MenuItemOption\n                      fontSize={props.size}\n                      value={opt.toString()}\n                      key={`size${oid}`}\n                    >\n                      {opt} / page\n                    </MenuItemOption>\n                  ))}\n              </MenuOptionGroup>\n            </MenuList>\n          </Menu>\n        )}\n        {props.showQuickJumper && (\n          <HStack\n            as='form'\n            userSelect='none'\n            opacity={props.disabled ? 0.6 : 1}\n            onSubmit={pageJumperUpdate}\n            display={\n              props.responsive && {\n                base: !props.responsive.pageJumper && 'none',\n                sm: 'block'\n              }\n            }\n          >\n            <Text wordBreak='unset'>Go to:</Text>\n            <Input\n              width='50px'\n              value={pageJumper}\n              isDisabled={props.disabled}\n              onChange={(e) => setPageJumper(e.target.value)}\n              size={\n                props.size === 'lg' ? 'md' : props.size === 'xs' ? 'xs' : 'sm'\n              }\n            />\n          </HStack>\n        )}\n      </Box>\n    )\n  )\n}\n","import React from 'react'\nimport { defaultData } from '../providers/pagination-provider'\n\nconst methods = ['itemRender', 'setCurrentPage']\nconst nonMethods = Object.keys(defaultData).filter((k) => !methods.includes(k))\n\nexport const filterProps = (props) => {\n  const validProps = nonMethods.reduce((acc, nxt) => {\n    acc.push(props[nxt])\n    return acc\n  }, [])\n  return React.useMemo(() => props, validProps)\n}\n","import React from 'react'\n\nimport PagContext from './providers/pagination-provider'\nimport { PaginationComp } from './components/pagination'\n\nimport { filterProps } from './services/filter-props'\n\nconst Pagination = (props) => {\n  const defaultProps = React.useContext(PagContext)\n  const allProps = { ...defaultProps, ...props }\n  const [currentPage, setCurrentPage] = React.useState(\n    allProps.current || allProps.defaultCurrent\n  )\n  React.useEffect(() => {\n    props.current && setCurrentPage(props.current)\n  }, [props.current])\n  const [pageSize, setPageSize] = React.useState(\n    allProps.pageSize || allProps.defaultPageSize\n  )\n  const contextvalue = { ...allProps }\n  const value = React.useMemo(() => {\n    return {\n      ...contextvalue,\n      currentPage,\n      setCurrentPage,\n      pageSize,\n      setPageSize\n    }\n  }, [filterProps(contextvalue), currentPage, pageSize])\n  return (\n    <PagContext.Provider value={value}>\n      <PaginationComp />\n    </PagContext.Provider>\n  )\n}\n\nexport default Pagination\n","import React from 'react'\n\nimport Pagination from 'choc-paginator'\nimport 'choc-paginator/dist/index.css'\nimport { useColorMode, Button, Stack } from '@chakra-ui/react'\n\nconst Section = (props) => (\n  <Stack\n    spacing={5}\n    bg='gray.600'\n    p={10}\n    w='full'\n    direction='column'\n    alignItems='center'\n  >\n    <h3>{props.title} </h3>\n    {props.children}\n  </Stack>\n)\n\nconst App = () => {\n  const { colorMode, toggleColorMode } = useColorMode()\n  return (\n    <div>\n      <Section title=''>\n        <Button onClick={toggleColorMode}>\n          Toggle {colorMode === 'light' ? 'Dark' : 'Light'}\n        </Button>\n      </Section>\n      <Section title='All Pagination'>\n        <Pagination\n          defaultCurrent={2}\n          total={50}\n          paginationProps={{ display: 'flex', mb: 5 }}\n          responsive\n        />\n      </Section>\n      <Section title='All Pagination'>\n        <Pagination\n          defaultCurrent={1}\n          total={500}\n          onChange={(page) => console.log(page)}\n          pageNeighbours={1}\n          showSizeChanger\n          size='sm'\n          showTotal={(total) => `${total} Items`}\n          hideOnSinglePage\n          simple={false}\n          activeStyles={{ bg: 'green.800', cursor: 'pointer' }}\n          paginationProps={{ display: 'flex' }}\n          showQuickJumper\n          responsive={{\n            activePage: true,\n            totalRender: false,\n            fastBackward: false,\n            fastForward: false,\n            pageSize: false,\n            pageJumper: false\n          }}\n        />\n      </Section>\n    </div>\n  )\n}\n\nexport default App\n","import './index.css'\n\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport { ChakraProvider, extendTheme } from '@chakra-ui/react'\nconst colors = {\n  brand: {\n    50: '#ecefff',\n    100: '#cbceeb',\n    200: '#a9aed6',\n    300: '#888ec5',\n    400: '#666db3',\n    500: '#4d5499',\n    600: '#3c4178',\n    700: '#2a2f57',\n    800: '#181c37',\n    900: '#080819'\n  }\n}\nconst config = {\n  initialColorMode: 'dark',\n  useSystemColorMode: false\n}\n\nconst theme = extendTheme({ colors, config })\n\nReactDOM.render(\n  <ChakraProvider theme={theme}>\n    <App />\n  </ChakraProvider>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}